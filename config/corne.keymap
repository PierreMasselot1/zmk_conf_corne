/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&lt { tapping-term-ms = <175>; };

/ {
    behaviors {
        tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        // Mouse movement
        mmv_low: mmv {
            compatible = "zmk,behavior-mouse-move";
            move-ms = <10>;
            speed = <1>;
        };
        mmv_med: mmv {
            compatible = "zmk,behavior-mouse-move";
            move-ms = <10>;
            speed = <5>;
        };
        mmv_high: mmv {
            compatible = "zmk,behavior-mouse-move";
            move-ms = <10>;
            speed = <10>;
        };
    };


    combos {
        compatible = "zmk,combos";

        bt_clear {
            bindings = <&bt BT_CLR>;
            key-positions = <4 5 7 6>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <28 31>;
        };

        capslock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <32 27>;
        };

        ble {
            bindings = <&out OUT_BLE>;
            key-positions = <0 11>;
        };

        usb {
            bindings = <&out OUT_USB>;
            key-positions = <12 23>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB  |  Q  |  W  |  E  |  R  |    T    |   |  Y  |  U   |  I  |  O  |  P  | ESC |
            // | CTRL |  A  |  S  |  D  |  F  |    G    |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |    B    |   |  N  |  M   |  ,  |  .  |  /  | LALT |
            //                    | GUI | LWR | ALT/ENT |   | HYPER/SPC | BKSP  | RSE |

            bindings = <
&kp TAB         &kp Q  &kp W  &kp E     &kp R  &kp T          &kp Y        &kp U          &kp I      &kp O    &kp P            &kp ESC
&kp LEFT_SHIFT  &kp A  &kp S  &kp D     &kp F  &kp G          &kp H        &kp J          &kp K      &kp L    &lt 3 SEMICOLON  &tp RIGHT_SHIFT SQT
&kp LCTRL       &kp Z  &kp X  &kp C     &kp V  &kp B          &kp N        &kp M          &kp COMMA  &kp DOT  &kp FSLH         &kp LEFT_ALT
                              &kp LGUI  &mo 2  &lt 4 ENTER    &lt 5 SPACE  &kp BACKSPACE  &mo 1
            >;
        };

        layer_above {
            // -----------------------------------------------------------------------------------------
            // |       |  F1  |  F2  |  F3  |  F4  |  F5 |            |  F6  |  F7  |  F8  |  F9  |  F10  |   |
            // |       | Prev | Next | Vol - | Vol + | Play/Pause |   |      | LFT | DWN |  UP | RGT |     |     |
            // | BTCLR | BT1 | BT2 | BT3 | BT4 | BT5 |   |            |     |     |     |     |     |     |
            //                    |     |     |    |                  |     |     |     |

            bindings = <
&trans  &trans  &kp N7        &kp N8        &kp N9        &trans     &trans    &trans         &trans        &trans     &trans  &trans
&trans  &trans  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans     &kp LEFT  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &trans  &trans
&trans  &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans     &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &trans  &trans
                              &trans        &kp NUMBER_0  &kp DEL    &trans    &trans         &trans
            >;
        };

        layer_below {
            // -----------------------------------------------------------------------------------------
            // |      |  !  |  @  |  #  |  $  |    %     |   |  ^  |  &  |  *  |  (  |  )  |   \   |
            // |      |  1  |  2  |  3  |  4  |    5     |   |  -  |  =  |  `  |  [  |  ]  |  "|"  |
            // | SHFT |  6  |  7  |  8  |  9  |    0     |   |  _  |  +  |  ~  |  {  |  }  | RALT |
            //                     | GUI |     | ALT/ENT |   | HYPER/SPACE | BKSP |    |

            bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTERISK  &kp LPAR  &kp RPAR  &kp BSLH
&trans  &trans    &trans  &mkp MB4  &mkp MB5  &trans       &kp MINUS  &kp EQUAL  &kp GRAVE     &kp LBKT  &kp RBKT  &kp PIPE
&trans  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp TILDE     &kp LBRC  &kp RBRC  &kp RIGHT_ALT
                          &kp LGUI  &trans    &trans       &trans     &trans     &trans
            >;
        };

        System_layer {
            bindings = <
&out OUT_TOG    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0    &trans  &trans  &trans  &trans  &trans  &trans
&studio_unlock  &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                            &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };

        fun {
            bindings = <
&trans  &kp F12  &kp F7  &kp F8  &kp F9  &trans    &trans      &trans             &trans            &trans      &trans  &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &trans    &kp C_PREV  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP   &kp C_NEXT  &trans  &trans
&trans  &kp F10  &kp F1  &kp F2  &kp F3  &trans    &trans      &trans             &kp C_PLAY_PAUSE  &trans      &trans  &trans
                         &trans  &trans  &trans    &trans      &trans             &trans
            >;
        };

        mouse {
            bindings = <
&trans  &trans  &trans  &mmv_high MOVE_LEFT &mmv_high MOVE_RIHGT &trans    &trans  &mmv_high MOVE_DOWN &mmv_high MOVE_UP &trans  &trans  &trans
&trans  &trans  &trans  &mmv_med MOVE_LEFT  &mmv_med MOVE_RIGHT  &trans    &trans  &mmv_med MOVE_DOWN  &mmv_med MOVE_UP  &trans  &trans  &trans
&trans  &trans  &trans  &mmv_low MOVE_LEFT  &mmv_low MOVE_RIGHT  &trans    &trans  &mmv_low MOVE_DOWN  &mmv_low MOVE_UP  &trans  &trans  &trans
                        &trans          &trans           &trans    &trans  &trans          &trans
            >;
        };
    };
};
